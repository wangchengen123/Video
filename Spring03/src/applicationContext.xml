
<?xml version="1.0" encoding="UTF-8"?>
-
<beans
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans">
	
	<!-- 加载properties文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<!-- 开启注解扫描 -->
	<context:component-scan base-package="com.zhiyou" />
	
	<!-- 4.创建DBCP的对象 -->
	<bean id="dataSource"class="org.apache.commons.dbcp.BasicDataSource">
		<!-- 3.1给数据库属性赋值 -->
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url"value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!--5.创建切面类对象:事务管理器 -->
	<bean
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		id="transactionManager">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 注解开发需要的事务配置 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
		
	<!-- 创建SqlSessionFactory -->
	<bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 加载Mybatis的配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- Spring容器通过扫描mapper文件的位置,生成Mapper的代理对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入SqlSessionFactory
			值是String类型的bean的名字,所以用value
		 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<!-- mapper文件的位置 -->
		<property name="basePackage" value="com.zhiyou.mapper"></property>
	</bean>
		
		
</beans>